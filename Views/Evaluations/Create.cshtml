@model Licitaciones.Models.Evaluation

@{
    ViewData["Title"] = "Crear Evaluación";
    var proposal = ViewBag.Proposal as Licitaciones.Models.Proposal ?? ViewData["Proposal"] as Licitaciones.Models.Proposal;
    
    if (proposal == null)
    {
        <div class="alert alert-danger">
            <h4><i class="icon fas fa-ban"></i> Error</h4>
            No se pudo cargar la información de la propuesta.
        </div>
        return;
    }
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">Crear Evaluación</h1>
            </div>
        </div>
    </div>
</div>

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Propuesta a Evaluar</h3>
                    </div>
                    <div class="card-body">
                        <dl class="row">
                            <dt class="col-sm-3">Licitación</dt>
                            <dd class="col-sm-9">@proposal.Tender.Title</dd>

                            <dt class="col-sm-3">Proveedor</dt>
                            <dd class="col-sm-9">@proposal.Provider.Name</dd>

                            <dt class="col-sm-3">Estado</dt>
                            <dd class="col-sm-9">@proposal.Status</dd>

                            <dt class="col-sm-3">Monto</dt>
                            <dd class="col-sm-9">@proposal.Amount.ToString("C")</dd>

                            <dt class="col-sm-3">Fecha de Envío</dt>
                            <dd class="col-sm-9">@proposal.SubmittedAt.ToLocalTime().ToString("dd/MM/yyyy HH:mm")</dd>
                        </dl>

                        <h4 class="mt-4">Documentos de la Propuesta</h4>
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Tipo</th>
                                        <th>Nombre</th>
                                        <th>Fecha de Subida</th>
                                        <th>Acciones</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var doc in proposal.Documents)
                                    {
                                        <tr>
                                            <td>@doc.DocumentType</td>
                                            <td>@doc.FileName</td>
                                            <td>@doc.UploadedAt.ToLocalTime().ToString("dd/MM/yyyy HH:mm")</td>
                                            <td>
                                                <a href="/@doc.FilePath" class="btn btn-primary btn-sm" target="_blank">
                                                    <i class="fas fa-download"></i> Descargar
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="card mt-4">
                    <div class="card-header">
                        <h3 class="card-title">Formulario de Evaluación</h3>
                    </div>
                    <div class="card-body">
                        <form id="evaluationForm" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="proposalId" value="@proposal.Id" />

                            <div class="form-group">
                                <label for="technicalScore" class="control-label">Puntuación Técnica</label>
                                <input type="number" id="technicalScore" name="technicalScore" class="form-control" min="0" max="100" step="0.01" required />
                                <small class="form-text text-muted">La puntuación técnica representa el 70% de la puntuación total.</small>
                            </div>

                            <div class="form-group">
                                <label for="financialScore" class="control-label">Puntuación Financiera</label>
                                <input type="number" id="financialScore" name="financialScore" class="form-control" min="0" max="100" step="0.01" required />
                                <small class="form-text text-muted">La puntuación financiera representa el 30% de la puntuación total.</small>
                            </div>

                            <div class="form-group">
                                <label for="comments" class="control-label">Comentarios</label>
                                <textarea id="comments" name="comments" class="form-control" rows="4" required></textarea>
                            </div>

                            <div class="form-group">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-save"></i> Guardar Evaluación
                                </button>
                                <a asp-controller="Proposals" asp-action="Details" asp-route-id="@proposal.Id" class="btn btn-secondary">
                                    <i class="fas fa-times"></i> Cancelar
                                </a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            // Configurar el token antifalsificación para todas las solicitudes AJAX
            $.ajaxSetup({
                headers: {
                    'X-CSRF-TOKEN': $('input[name="__RequestVerificationToken"]').val()
                }
            });

            $('#evaluationForm').on('submit', function (e) {
                e.preventDefault();

                // Validar el formulario
                if (!$(this)[0].checkValidity()) {
                    $(this)[0].reportValidity();
                    return false;
                }

                var formData = $(this).serialize();

                // Mostrar confirmación
                Swal.fire({
                    title: '¿Confirmar evaluación?',
                    text: 'Una vez guardada la evaluación, no podrá modificarla',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, guardar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Mostrar loading
                        Swal.fire({
                            title: 'Guardando...',
                            text: 'Por favor espere',
                            allowOutsideClick: false,
                            allowEscapeKey: false,
                            allowEnterKey: false,
                            showConfirmButton: false,
                            didOpen: () => {
                                Swal.showLoading();
                            }
                        });

                        // Enviar formulario
                        $.ajax({
                            url: '@Url.Action("Create", "Evaluations")',
                            type: 'POST',
                            data: formData,
                            headers: {
                                'X-Requested-With': 'XMLHttpRequest'
                            },
                            success: function (response) {
                                if (response.success) {
                                    Swal.fire({
                                        title: '¡Éxito!',
                                        text: response.message,
                                        icon: 'success',
                                        confirmButtonText: 'Aceptar'
                                    }).then(() => {
                                        window.location.href = response.redirectUrl;
                                    });
                                } else {
                                    Swal.fire({
                                        title: 'Error',
                                        text: response.message,
                                        icon: 'error',
                                        confirmButtonText: 'Aceptar'
                                    });
                                }
                            },
                            error: function (xhr, status, error) {
                                var message = 'Ocurrió un error al guardar la evaluación';
                                if (xhr.responseJSON && xhr.responseJSON.message) {
                                    message = xhr.responseJSON.message;
                                }
                                Swal.fire({
                                    title: 'Error',
                                    text: message,
                                    icon: 'error',
                                    confirmButtonText: 'Aceptar'
                                });
                            }
                        });
                    }
                });
            });
        });
    </script>
} 